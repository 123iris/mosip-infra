apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafkaconnect-deploy
  labels:
    app: kafkaconnect
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: kafkaconnect
  template:
    metadata:
      labels:
        app: kafkaconnect
    spec:
      containers:
        - name: kafkaconnect-container
          image: {{ .Values.debezium.image }}
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.debezium.port }}
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.debezium.port }}
          env:
            - name: BOOTSTRAP_SERVERS
              value: {{ .Values.kafka.server }}
            - name: GROUP_ID
              value: {{ .Values.kafka.groupId | quote }}
            - name: OFFSET_STORAGE_TOPIC
              value: {{ .Values.kafka.topics.offset }}
            - name: CONFIG_STORAGE_TOPIC
              value: {{ .Values.kafka.topics.config }}
            - name: STATUS_STORAGE_TOPIC
              value: {{ .Values.kafka.topics.status }}
          ports:
          - containerPort: {{ .Values.debezium.port }}
---
apiVersion: v1
kind: Service
metadata:
  name: kafkaconnect-service
  labels:
    app: kafkaconnect-service
spec:
  type: ClusterIP
  ports:
    - name: kafkaconnect
      protocol: TCP
      port: {{ .Values.debezium.port }}
  selector:
      app: kafkaconnect
